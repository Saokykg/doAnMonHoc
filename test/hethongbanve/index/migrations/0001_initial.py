# Generated by Django 3.2.6 on 2021-09-04 05:17

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BenXe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('ten', models.CharField(max_length=100, unique=True)),
                ('dia_chi', models.CharField(max_length=200)),
                ('quan_huyen', models.CharField(max_length=200)),
                ('mien', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChuyenXe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KhachHang',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('ho_ten', models.CharField(max_length=100)),
                ('ngay_sinh', models.DateField()),
                ('cmnd', models.CharField(max_length=12, unique=True)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('sdt', models.CharField(max_length=12, unique=True)),
                ('vip', models.CharField(max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ModelsXe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('mau_ma', models.CharField(max_length=100, unique=True)),
                ('hang_xe', models.CharField(max_length=100)),
                ('so_ghe', models.IntegerField()),
                ('so_do', models.JSONField()),
                ('trong_tai', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NhanVien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('ho_ten', models.CharField(max_length=100)),
                ('ngay_sinh', models.DateField()),
                ('cmnd', models.CharField(max_length=12, unique=True)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('sdt', models.CharField(max_length=12, unique=True)),
                ('ngay_vao_lam', models.DateField()),
                ('chuc_vu', models.CharField(max_length=20)),
                ('ben_xe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.benxe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TramDung',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('ten', models.CharField(max_length=100)),
                ('dia_chi', models.CharField(max_length=200)),
                ('loai_tram', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NhanVienBanVe',
            fields=[
                ('nhan_vien', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='index.nhanvien')),
                ('phong_ve', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TaiXe',
            fields=[
                ('nhan_vien', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='index.nhanvien')),
                ('bang_lai', models.CharField(max_length=20, unique=True)),
                ('hieu_luc', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Xe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('bien_so', models.CharField(max_length=20, unique=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.modelsxe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VeXe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ghe', models.CharField(max_length=5)),
                ('gia_ve', models.FloatField()),
                ('chuyen_xe', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.chuyenxe')),
                ('khach_hang', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.khachhang')),
            ],
        ),
        migrations.CreateModel(
            name='TuyenDuong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('quang_duong', models.IntegerField()),
                ('ben_cuoi', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ben_kt', to='index.benxe')),
                ('ben_dau', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ben_bd', to='index.benxe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TramDung_TuyenDuong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thu_tu', models.IntegerField()),
                ('thoi_gian_dung', models.TimeField()),
                ('tram_dung', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.tramdung')),
                ('tuyen_duong', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.tuyenduong')),
            ],
        ),
        migrations.AddField(
            model_name='tramdung',
            name='tramDung_tuyenDuong',
            field=models.ManyToManyField(through='index.TramDung_TuyenDuong', to='index.TuyenDuong'),
        ),
        migrations.CreateModel(
            name='GiaVe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gia_ve', models.FloatField()),
                ('model_xe', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.modelsxe')),
                ('tuyen_duong', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.tuyenduong')),
            ],
        ),
        migrations.AddField(
            model_name='chuyenxe',
            name='tuyen_duong',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.tuyenduong'),
        ),
        migrations.AddField(
            model_name='chuyenxe',
            name='xe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.xe'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(upload_to='uploads/%Y/%m')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='chuyenxe',
            name='tai_xe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.taixe'),
        ),
    ]
